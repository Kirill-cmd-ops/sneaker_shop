version: "3.8"

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
      target: frontend_builder
    container_name: nextjs_app
    ports:
      - "3000:3000"
    depends_on:
      - db
    volumes:
      - ./frontend:/frontend

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: monolith_app
    environment:
      - DATABASE_URL=postgresql://postgres:meteor906587@db:5432/sneaker_shop
    ports:
      - "8000:8000"
    depends_on:
      - db

  db:
    image: postgres:16.8
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: meteor906587
      POSTGRES_DB: sneaker_shop
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5


  alembic:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: alembic_migrations
    depends_on:
      db:
        condition: service_healthy
    command: [ "alembic", "upgrade", "head" ]
    environment:
      - DATABASE_URL=postgresql://postgres:meteor906587@db:5432/sneaker_shop
    volumes:
      - ./alembic:/app/alembic
      - ./:/app


volumes:
  pgdata:
