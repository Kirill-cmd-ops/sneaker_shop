"""Tables role, permission, role_permission, user_role have been created

Revision ID: 41adb231713a
Revises: 12bf59e6749e
Create Date: 2025-09-03 18:04:22.704497

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "41adb231713a"
down_revision: Union[str, None] = "12bf59e6749e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "permissions",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_permissions")),
    )
    op.create_table(
        "roles",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_roles")),
    )
    op.create_table(
        "role_permission_associations",
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("permission_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["permission_id"],
            ["permissions.id"],
            name=op.f(
                "fk_role_permission_associations_permission_id_permissions"
            ),
        ),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
            name=op.f("fk_role_permission_associations_role_id_roles"),
        ),
        sa.PrimaryKeyConstraint(
            "id", name=op.f("pk_role_permission_associations")
        ),
        sa.UniqueConstraint(
            "role_id", "permission_id", name="uq_role_permission"
        ),
    )
    op.create_table(
        "user_role_associations",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("role_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["role_id"],
            ["roles.id"],
            name=op.f("fk_user_role_associations_role_id_roles"),
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("fk_user_role_associations_user_id_users"),
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_user_role_associations")),
        sa.UniqueConstraint("user_id", "role_id", name="uq_user_role"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_role_associations")
    op.drop_table("role_permission_associations")
    op.drop_table("roles")
    op.drop_table("permissions")
    # ### end Alembic commands ###
